#include <stdio.h>

#define V 4

int tsp(int graph[][V], int s)
{
    int vertex[V];
    for (int i = 0; i < V; i++)
    {
        if (i != s)
            vertex[i] = i;
    }

    int min_path = INT_MAX;
    do
    {
        int current_pathweight = 0;
        int k = s;
        for (int i = 0; i < V; i++)
        {
            current_pathweight += graph[k][vertex[i]];
            k = vertex[i];
        }
        current_pathweight += graph[k][s];
        min_path = (min_path > current_pathweight) ? current_pathweight : min_path;

    } while (next_permutation(vertex, vertex + V));

    return min_path;
}

int main()
{
    int graph[][V] = { {0, 10, 15, 20},
                       {10, 0, 35, 25},
                       {15, 35, 0, 30},
                       {20, 25, 30, 0} };
    int s = 0;
    printf("Minimum cost: %d\n", tsp(graph, s));
    return 0;
}
